type User {
    id: ID!
    username: String!
    age: Int
    height: float
    is_active: Boolean
}

type Continent{
    name: String
    population: Int
    number_countries: int
    avg_population: Float
}

type City{
    name: String
    population: Int
}

type Country{
    name: String
    capital: City
    population: Int
    PIB: Float
    continent: Continent
    ciudades: [City]
    flag: String
}

type Query{
    getAllUsers: [User]
    getCityByName(name: String!): City
    getUserByID(id: ID!): User
    numberOfCities: Int
    getCountriesWithPopulationGreatherThanN:(n: Int): [Country]
}

type Mutation{
    createCity(city: City): City
    updateAgeUser(id: ID!, age:Int): User
    deleteAllCountries(countries: [Country]): Boolean
}